name: New CI
env:
  OUTPUT_PATH: ${{ github.workspace }}/.output
  DOTNET_VERSION_1: "3.1"
  DOTNET_VERSION_2: "5.0"
  SOLUTION_FILE: "FluentChange.Extensions.sln"
  
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: Setup Dotnet ${{ env.DOTNET_VERSION_1 }}
        uses: actions/setup-dotnet@v1
        with:
            dotnet-version: ${{ env.DOTNET_VERSION_1 }}

      - name: Setup Dotnet ${{ env.DOTNET_VERSION_2 }}
        uses: actions/setup-dotnet@v1
        with:
            dotnet-version: ${{ env.DOTNET_VERSION_2 }}

      - name: Setup Tool for Version
        run: dotnet tool install -g dotnet-version-cli

      - name: Git config
        run: |
            git config --local user.email "github@fluentchange.com"
            git config --local user.name "FluentChange GitHub"

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            common_models:
            - 'Common.Models/**'
            common_rest:
            - 'Common.Rest/**'

      - name: Increment version Common.Models
        if: steps.filter.outputs.common_models == 'true'
        working-directory: ./Common.Models
        run: dotnet version -m 'Auto increment version of ${{ inputs.project_folder }} to v$newVer by CI/CD pipeline' patch

      - name: Install dependencies
        run: dotnet restore ${{ env.SOLUTION_FILE }}
      
      - name: Build
        run: dotnet build ${{ env.SOLUTION_FILE }} --configuration Release --no-restore

      - name: Pack nuget AzureFunctions
        run: dotnet pack ${{ env.SOLUTION_FILE }} --configuration Release --no-build --no-restore 
     
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: nuget
          path: ./**/bin/Release/


  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v1
        with:
          name: nuget
          path: nuget
      
      - name: Push nuget
        run: dotnet nuget push nuget/**/*.nupkg --skip-duplicate --api-key ${{secrets.NUGET_API_KEY}} --source https://api.nuget.org/v3/index.json
